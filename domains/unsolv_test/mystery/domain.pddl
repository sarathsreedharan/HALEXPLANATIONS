(define (domain mystery-strips)
(:requirements :typing)
(:types obj)
   (:predicates
       (province ?x - obj)
       (planet ?x - obj)
       (food ?x - obj)
       (pleasure ?x - obj)
       (pain ?x - obj)
       (eats ?n - obj ?n - obj)
       (craves ?v - obj ?n - obj)
       (fears ?c - obj ?v - obj)
       (locale ?n - obj ?a - obj)
       (harmony ?v - obj ?s - obj)
       (attacks ?i - obj ?j - obj)
       (orbits ?i - obj ?j - obj)
)

   (:action overcome
       :parameters (?a - obj ?b - obj ?c - obj ?d - obj ?e - obj)
       :precondition (and (pain ?a)
			  (pleasure ?b)
			  (craves ?a ?c)
                          (craves ?b ?c)
			  (food ?c)
                          (harmony ?b ?d)
			  (planet ?e)
			  (orbits ?d ?e)
                          (planet ?d))
       :effect (and (not (craves ?a ?c))
                    (fears ?a ?b)
                    (not (harmony ?b ?e))
                    (harmony ?b ?d)))
   (:action feast
       :parameters (?a - obj ?b - obj ?c - obj ?d - obj ?e - obj)
       :precondition (and (craves ?a ?b)
			  (food ?b)
			  (pleasure ?a)
                          (eats ?b ?c)
			  (food ?c)
                          (locale ?b ?e)
                          (attacks ?d ?e))
       :effect (and (not (craves ?a ?b))
                    (craves ?a ?c)
                    (not (locale ?b ?e))
                    (locale ?b ?d)))
   (:action succumb
       :parameters (?a - obj ?b - obj ?c - obj ?d - obj ?e - obj)
       :precondition (and (fears ?a ?b)
			  (pain ?a)
			  (pleasure ?b)
                          (craves ?b ?c)
			  (food ?c)
			  (harmony ?b ?d)
                          (orbits ?d ?e))
       :effect (and (not (fears ?a ?b))
                    (craves ?a ?c)
                    (not (harmony ?b ?d))
                    (harmony ?b ?e)))
)
